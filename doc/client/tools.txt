.. -*- mode: rst -*-

.. _client-tools:

Client Tool Drivers
===================

Client tool drivers allow Bcfg2 to execute configuration operations by
interfacing with platform and distribution specific tools.

Tool drivers handle any reconfiguration or verification operation. So
far we have tools that primarily deal with packaging systems and service
management. The POSIX tool also handles file system and permissions/groups
operations.

To write your own tool driver, to handle a new packaging format, or new
service architecture see :ref:`development-client-driver`

When the Bcfg2 client is run, it attempts to instantiate each of these
drivers. The succeeding list of drivers are printed as a debug message
after this process has completed. Drivers can supercede one another,
for example, the Yum driver conflicts (and unloads) the RPM driver. This
behavior can be overridden by running the Bcfg2 client with the ``-D``
flag. This flag takes a colon delimited list of drivers to use on
the system.

Currently these are the tool drivers that are distributed with Bcfg2:

.. toctree::
   :maxdepth: 2
   :glob:

   tools/*

Action
------

Pre and post-install tests and actions. This driver executes commands
and supplies status information to the Bcfg2 server via the statistics
mechanism. It can also be used to prevent bundle installation when
pre-conditions are not met. See the UsingActions page for more details.

APK
---

This tool driver is used to handle packages on apk based systems like Alpine
Linux and employs the "apk" executable. Extra information can be
found at `apk-tools`_.

.. _apk-tools: http://apk-tools.sourceforge.net/

APT
---

Debian Packages. This tool driver is used to handle packages on dpkg
based systems and employs the "apt" executable. Extra information can be
found at :ref:`client-tools-apt`.

Blast
-----

Blastwave Packages. This tool driver is for blastwave packages on solaris

Chkconfig
---------

Tool to manage services (primarily on Redhat based distros).

.. note::

    Start and stop are standard arguments, but the one for reload
    isn't consistent across services. You can specify which argument
    to use with the ``target`` attribute in Service tags. Example:

    .. code-block:: xml

        <Service name="ftp" target="condrestart" status="on" type="chkconfig"/>

DebInit
-------

Debian Service Support; exec's update-rc.d to configure services.

Encap
-----

`Encap <http://www.encap.org>`_ Packages.

FreeBSDInit
-----------

FreeBSD Service Support. Only bundle updates will work.

FreeBSDPackage
--------------

FreeBSD Packages. Verifies packages and their version numbers but can't
install packages.

launchd
-------

Mac OS X Services. To use this tool, you must maintain a standard launch
daemon .plist file in ``/Library/LaunchDaemons/`` (example ssh.plist)
and setup an entry in your config to load or unload the service.

.. code-block:: xml

    <Service name="com.openssh.sshd" type="launchd" status="on"/>

Note the name is the *Label* specified inside of the .plist file

Portage
-------

Support for Gentoo Packages.

POSIX
-----

Files and Permissions are handled by the POSIX driver. Usage well
documented other places.

RcUpdate
--------

Uses the rc-update executable to manage services on distributions such
as Gentoo.

RPM
---

Executes RPM to manage packages on Redhat-based and similar systems.
Consider using the :ref:`YUM <client-tools-yum>` tool instead if possible.

Formerly called ``RPMng``, but was renamed for the 1.3 release.

SMF
---

Solaris Service Support.

Example legacy run service (lrc):

.. code-block:: xml

    <Service name='/etc/rc2_d/S47pppd' FMRI='lrc:/etc/rc2_d/S47pppd' status='off' type='smf'/>

Systemd
-------

Systemd service support.

SYSV
----

Handles `System V Packaging <http://docs.oracle.com/cd/E19683-01/806-7008/index.html>`_ format that is available on Solaris.

.. note::

  If the Packages specified in the PackageList are datastream format
  packages distributed via HTTP, you must specify a simplefile attribute.
  Such packages will be downloaded and installed from a local path.

  Note the use of the uri attribute in the datastream format example.  If
  the simplefile attribute exists, the
  :ref:`Pkgmgr <server-plugins-generators-pkgmgr>` plugin will
  automatically construct the url attribute by concatenating the uri and
  simplefile attributes (with an intervening slash).

  Datastream format over HTTP:

  .. code-block:: xml

     <PackageList uri='http://install/packages' type='sysv' priority='0'>
         <Package name='SCbcfg2' version='1.3.4' simplefile='bcfg-1.3.4-1' />
     </PackageList>

  File system format over NFS or local path:

  .. code-block:: xml

     <PackageList url='/mnt/install/packages' type='sysv' priority='0'>
         <Package name='SCbcfg2' version='1.3.4' />
     </PackageList>


Upstart
-------

Upstart service support. Uses `Upstart`_ to configure services.

.. _Upstart: http://upstart.ubuntu.com/

YUM
---

Handles RPMs using the YUM package manager. Renamed from ``YUMng`` for
the 1.3 release.  See :ref:`client-tools-yum` for more details.

YUM24
-----

.. warning:: Deprecated in favor of :ref:`YUM <client-tools-yum>`

Handles RPMs using older versions of the YUM package manager.

